name: Deploy api blog

on:
  # 手动触发
  workflow_dispatch:
#  push:
#    branches: [ main ]
#  pull_request:
#    branches: [ main ]

jobs:
  build:
    # 使用ubuntu系统镜像运行自动化脚本
    runs-on: ubuntu-latest

    steps:

      # 切换分支
      - name: Checkout
        uses: actions/checkout@v2

      #      # 下载 git submodule
      #      - uses: srt32/git-actions@v0.0.3
      #        with:
      #          args: git submodule update --init --recursive

      # 使用 node:18
      - name: use Node.js 18
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      #安装 pnpm
      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      # 缓存 node modules
      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      # npm install
      - name: Install Dependencies
        run: |
          pnpm -v
          pnpm install

      # Create .production.env
      - name: Create .production.env
        env:
          NODE_ENV: production
          PORT: ${{ secrets.APP_PORT }}
          HOST: ${{ secrets.APP_HOST }}
          MONGO_PORT: ${{ secrets.MONGO_PORT }}
          MONGO_USER: ${{ secrets.MONGO_USER }}
          MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
          MONGO_HOST: ${{ secrets.MONGO_HOST }}
          MONGO_DB: ${{ secrets.MONGO_DB }}
          ACCESSKEY: ${{ secrets.ACCESSKEY }}
          SECRETKEY: ${{ secrets.SECRETKEY }}
        run: |
          touch .production.env
          echo NODE_ENV="$NODE_ENV" >> .production.env
          echo PORT="$PORT" >> .production.env
          echo HOST="$HOST" >> .production.env
          echo MONGO_PORT="$MONGO_PORT" >> .production.env
          echo MONGO_USER="$MONGO_USER" >> .production.env
          echo MONGO_PASSWORD="$MONGO_PASSWORD" >> .production.env
          echo MONGO_HOST="$MONGO_HOST" >> .production.env
          echo MONGO_DB="$MONGO_DB" >> .production.env
          echo ACCESSKEY="$ACCESSKEY" >> .production.env
          echo SECRETKEY="$SECRETKEY" >> .production.env
        shell: bash

      # build
      - name: Build
        run: pnpm run build

      # tar
      - name: Tar dist
        run: tar zcf build.tar.gz dist package.json pnpm-lock.yaml .production.env

      # Deploy to server
      - name: Deploy to server
        id: deploy
        uses: Pendect/action-rsyncer@v1.1.0
        env:
          DEPLOY_KEY: ${{secrets.ACCESS_TOKEN}}
        with:
          flags: '-avzr --delete'
          options: ''
          ssh_options: ''
          src: 'build.tar.gz'
          dest: '${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }}:/wwwroot/api-blogs'

      # 远程Command
      - name: Command
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.ACCESS_TOKEN }}
          script: |
            cd /wwwroot/api-blogs
            tar zxf build.tar.gz
            rm build.tar.gz
            export NVM_DIR=~/.nvm
            source ~/.nvm/nvm.sh
            pnpm i
            pm2 delete api-blogs
            pnpm run pm2
            pm2 save
            echo "Complete!!!"
